name: Release

on:
  push:
    branches:
      - "main"

jobs:
  image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set IMAGE_TAG env
        run: echo "IMAGE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ vars.REGION }}
          role-to-assume: ${{ vars.ROLE_ARN }}
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ vars.IMAGE }}:latest
            ${{ vars.IMAGE }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Force new deployment and wait for services stability in ECS
        run: |
          aws ecs update-service --cluster ${{ vars.CLUSTER_NAME }} --service $${{ vars.SERVICE_NAME }} --force-new-deployment
          aws ecs wait services-stable --cluster ${{ vars.CLUSTER_NAME }} --service ${{ vars.SERVICE_NAME }}
          aws ecs describe-services --cluster ${{ vars.CLUSTER_NAME }} --service ${{ vars.SERVICE_NAME }}
